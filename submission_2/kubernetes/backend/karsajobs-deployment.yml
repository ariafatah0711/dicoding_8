apiVersion: apps/v1 # versi api kubernetes: apps/v1 (merupakan versi API untuk objek Deployment) 
kind: Deployment # menunjukan jenis object: Deployment (Menunjukkan bahwa objek yang dibuat adalah sebuah Deployment, digunakan untuk mengatur dan mengelola Pod secara otomatis (misalnya untuk rolling update, restart, dsb.).)
metadata: # informasi tambahan object
  namespace: submission2 # menggunakan object ini akan ditempatkan di namespace submission2
  name: karsajobs
spec:
  replicas: 2 # jumlah Pod yang akan dijalankan (skalabilitas horizontal)
  selector: # menemukan Pod mana yang dikelola
    matchLabels: # Deployment akan mencocokkan pod dengan label app: karsajobs dan tier: backend.
      app: karsajobs
      tier: backend
  template: # Template ini adalah blueprint untuk membuat Pod.
    metadata: # informasi tambahan object Pod
      namespace: submission2
      labels: # Label ini harus cocok dengan selector, agar Deployment tahu Pod mana yang dikelola.
        app: karsajobs
        tier: backend
    spec:
      containers: # container yang akan dijalankan di Pod
      - name: karsajobs # nama container
        image: ghcr.io/ariafatah0711/karsajobs:latest # image container
        ports:
          - containerPort: 8080 # container ini akan mengekspose port 8080
        env: # Variabel lingkungan (environment variable) yang digunakan oleh aplikasi di container.
          - name: APP_PORT
            valueFrom:
              configMapKeyRef: # mengambil nilai dari ConfigMap, cocok untuk data non-rahasia seperti host dan port.
                name: mongo-config # nama ConfigMap
                key: APP_PORT # key
          - name: MONGO_HOST
            valueFrom:
              configMapKeyRef:
                name: mongo-config
                key: MONGO_HOST
          - name: MONGO_USER
            valueFrom:
              secretKeyRef: # mengambil nilai dari Secret, digunakan untuk menyimpan informasi sensitif seperti username dan password database.
                name: mongo-secret # nama Secret
                key: MONGO_ROOT_USERNAME # key
          - name: MONGO_PASS
            valueFrom:
              secretKeyRef:
                name: mongo-secret
                key: MONGO_ROOT_PASSWORD