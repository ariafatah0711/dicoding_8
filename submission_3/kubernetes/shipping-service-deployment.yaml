apiVersion: apps/v1 # Versi API untuk resource Deployment
kind: Deployment # Mendefinisikan sebuah Deployment
metadata:
  namespace: submission3 # Namespace yang digunakan
  name: shipping-service # Nama Deployment
spec:
  replicas: 1 # Jumlah pod yang dijalankan adalah 1
  selector:
    matchLabels:
      app: shipping-service # Selector untuk memilih pod berdasarkan label ini
  template:
    metadata:
      labels:
        app: shipping-service # Label pod (harus cocok dengan selector di atas)
        sidecar.istio.io/inject: "false" # Menonaktifkan sidecar Istio injection untuk Pod ini
    spec:
      initContainers: # Init container dijalankan sebelum container utama
        - name: wait-for-rabbitmq
          image: busybox # Menggunakan image ringan BusyBox
          command: ['sh', '-c', 'for i in $(seq 1 30); do nc -z rabbitmq 5672 && exit 0 || sleep 2; done; exit 1']  # Cek koneksi ke RabbitMQ sebelum melanjutkan
      containers:
        - name: shipping-service # Nama container utama
          image: ghcr.io/ariafatah0711/shipping-service:latest # Image dari GitHub Container Registry
          ports:
            - containerPort: 3001 # Port di dalam container yang akan diekspos
          env:
            - name: NODE_ENV # Menjalankan Node.js dalam mode production
              value: production
            - name: AMQP_URL # Konfigurasi URL RabbitMQ untuk komunikasi antar service
              value: amqp://guest:guest@rabbitmq.submission3.svc.cluster.local:5672
              # value: amqp://guest:guest@rabbitmq:5672
              # value: amqp://admin:admin123@rabbitmq:5672
              # value: amqp://admin:admin123@192.168.49.2:30006
            - name: PORT # Port aplikasi di dalam container
              value: "3001"
          readinessProbe: # (Opsional) Mengecek apakah aplikasi siap menerima trafik
            httpGet:
              path: / # Path yang dicek
              port: 3001 # Port yang dicek
            initialDelaySeconds: 10 # Delay awal sebelum pengecekan pertama
            periodSeconds: 5 # Interval antar pengecekan

---

apiVersion: v1 # Versi API untuk Service
kind: Service # Mendefinisikan sebuah Service untuk expose Deployment
metadata:
  namespace: submission3 # Namespace yang digunakan
  name: shipping-service # Nama Service
spec:
  selector:
    app: shipping-service # Menghubungkan Service ke Pod dengan label ini
  ports:
    - name: http-shipping-service # Nama port service (opsional, untuk 
      protocol: TCP # Protokol yang digunakan
      port: 3001 # Port yang diekspos oleh Service di dalam cluster
      targetPort: 3001 # Port yang diekspos di node (akses luar cluster)
  type: ClusterIP # Tipe Service: dapat diakses melalui IP Node di port tertentu